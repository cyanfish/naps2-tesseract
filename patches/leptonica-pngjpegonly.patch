diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6d300da..8bcddff 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -61,66 +61,9 @@ set(leptonica_INSTALL_CMAKE_DIR "lib/cmake/leptonica"
     CACHE STRING "Install destination for CMake package files")
 
 if(NOT SW_BUILD)
-    find_package(GIF)
     find_package(JPEG)
     find_package(PNG)
-    find_package(TIFF)
     find_package(ZLIB)
-    find_package(PkgConfig)
-    if (PKG_CONFIG_FOUND)
-        pkg_check_modules(WEBP libwebp QUIET)
-        pkg_check_modules(WEBPMUX libwebpmux>=${MINIMUM_WEBPMUX_VERSION} QUIET)
-        pkg_check_modules(JP2K libopenjp2>=2.0 QUIET)
-    endif()
-    if(NOT WEBP)
-        find_path(WEBP_INCLUDE_DIR /webp/decode.h)
-        find_library(WEBP_LIBRARY NAMES webp)
-        if (WEBP_INCLUDE_DIR AND WEBP_LIBRARY)
-            set(WEBP 1)
-            set(WEBP_FOUND TRUE)
-            set(WEBP_LIBRARIES ${WEBP_LIBRARY})
-            set(WEBP_INCLUDE_DIRS ${WEBP_INCLUDE_DIR})
-        endif()
-    endif()
-    if(NOT WEBPMUX)
-        find_path(WEBPMUX_INCLUDE_DIR /webp/mux.h)
-        #TODO:  check minimal required version
-        if(NOT WEBPMUX_INCLUDE_DIR)
-            message(STATUS "Can not find: /webp/mux.h")
-        endif()
-        if(NOT "${WEBPMUX_INCLUDE_DIR}" STREQUAL "${WEBP_INCLUDE_DIR}")
-            set(WEBP_INCLUDE_DIRS ${WEBP_INCLUDE_DIRS} ${WEBPMUX_INCLUDE_DIR})
-        endif()
-        find_library(WEBPMUX_LIBRARY NAMES webpmux)
-        if (WEBPMUX_INCLUDE_DIR AND WEBPMUX_LIBRARY)
-            set(WEBPMUX 1)
-            set(HAVE_LIBWEBP_ANIM 1)
-            set(WEBPMUX_FOUND TRUE)
-            set(WEBP_LIBRARIES ${WEBP_LIBRARIES} ${WEBPMUX_LIBRARY})
-        endif()
-    endif()
-    if(NOT JP2K)
-        find_path(JP2K_INCLUDE_DIR /openjpeg-2.3/openjpeg.h)
-        find_library(JP2K_LIBRARY NAMES openjp2)
-        if (JP2K_INCLUDE_DIR AND JP2K_LIBRARY)
-             set(JP2K 1)
-             set(JP2K_FOUND TRUE)
-             set(JP2K_LIBRARIES ${JP2K_LIBRARY})
-             set(JP2K_INCLUDE_DIRS ${JP2K_INCLUDE_DIR})
-             set(HAVE_LIBJP2K 1)
-        endif()
-    endif()
-    if(NOT JP2K)
-        find_path(JP2K_INCLUDE_DIR /openjpeg-2.4/openjpeg.h)
-        find_library(JP2K_LIBRARY NAMES openjp2)
-        if (JP2K_INCLUDE_DIR AND JP2K_LIBRARY)
-             set(JP2K 1)
-             set(JP2K_FOUND TRUE)
-             set(JP2K_LIBRARIES ${JP2K_LIBRARY})
-             set(JP2K_INCLUDE_DIRS ${JP2K_INCLUDE_DIR})
-             set(HAVE_LIBJP2K 1)
-        endif()
-    endif()
 else() # SW_BUILD=ON
     find_package(SW REQUIRED)
     sw_add_package(
